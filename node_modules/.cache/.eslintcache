[{"/home/hyeongyu/practice/Study/wooga-wooga/src/index.js":"1","/home/hyeongyu/practice/Study/wooga-wooga/src/App.js":"2","/home/hyeongyu/practice/Study/wooga-wooga/src/components/RegionAndTemp.js":"3","/home/hyeongyu/practice/Study/wooga-wooga/src/components/Forecast.js":"4"},{"size":432,"mtime":1642675038701,"results":"5","hashOfConfig":"6"},{"size":966,"mtime":1642683851373,"results":"7","hashOfConfig":"6"},{"size":629,"mtime":1642683550920,"results":"8","hashOfConfig":"6"},{"size":628,"mtime":1642682672635,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12e2qv8",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hyeongyu/practice/Study/wooga-wooga/src/index.js",[],"/home/hyeongyu/practice/Study/wooga-wooga/src/App.js",["18","19","20"],"/home/hyeongyu/practice/Study/wooga-wooga/src/components/RegionAndTemp.js",[],"/home/hyeongyu/practice/Study/wooga-wooga/src/components/Forecast.js",[],{"ruleId":"21","severity":1,"message":"22","line":19,"column":13,"nodeType":"23","endLine":23,"endColumn":4},{"ruleId":"24","severity":1,"message":"25","line":20,"column":11,"nodeType":"26","messageId":"27","endLine":20,"endColumn":22},{"ruleId":"21","severity":1,"message":"28","line":23,"column":6,"nodeType":"29","endLine":23,"endColumn":8,"suggestions":"30"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'weatherData' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["31"],{"desc":"32","fix":"33"},"Update the dependencies array to be: [url]",{"range":"34","text":"35"},[657,659],"[url]"]